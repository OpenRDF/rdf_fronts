<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd  
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd" default-autowire="byName">

	<!-- http://lvqingboy-163-com.iteye.com/blog/689565 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/classes/jdbc.properties" />
	</bean>

	<!-- 参照地址： http://www.cnblogs.com/wj-wangjun/archive/2009/10/21/1587624.html -->
	<!-- database connect pool -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}">
		</property>
		<property name="url"
			value="${jdbc.url}">
		</property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 依赖注入数据源，注入上面定义的dataSource -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- inject dataSource -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 以下用来列出Hibernate映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/openrdf/beans/Users.hbm.xml</value>
				<value>com/openrdf/beans/UserLogin.hbm.xml</value>

			</list>
		</property>

		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 指定数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!-- 显示Hibernate持久化操作所生成的SQL -->
				<prop key="hibernate.show_sql">false</prop>
				<!-- 将SQL脚本进行格式化后再输出 -->
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="current_session_context_class">thread</prop>
				<!-- 是否根据需要每次自动创建数据库 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<!-- import sprint configuration -->
	<import resource="spring_config/spring_include.xml"/>
</beans>
